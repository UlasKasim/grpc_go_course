syntax = "proto3";

package calculator;

option go_package="calculator/calculatorpb";

message Calculator{
    int64 firstValue = 1;
    int64 secondValue = 2;
}

message CalculatorRequest{
    Calculator calculator = 1;
}

message CalculatorResponse{
    int64 result = 1;
}

message PrimeNumberDecompositionRequest{
    int32 primeNumber = 1;
}

message PrimeNumberDecompositionResponse{
    int32 decompose = 1;
}

message ComputeAverageRequest{
    int64 numberToCompute = 1;
}

message ComputeAverageResponse{
    int64 averageOfNumbers = 1;
}

message FindMaximumRequest{
    int64 number = 1;
}

message FindMaximumResponse{
    int64 average = 1;
}

message SquareRootRequest{
    int32 number = 1;
}

message SquareRootResponse{
    double number_root = 1;
}

service CalculatorService{
    rpc Add(CalculatorRequest) returns (CalculatorResponse){};

    rpc DecomposeNumber(PrimeNumberDecompositionRequest) returns (stream PrimeNumberDecompositionResponse){};

    rpc ComputeAverage(stream ComputeAverageRequest) returns (ComputeAverageResponse){};

    rpc FindMaximum(stream FindMaximumRequest) returns (stream FindMaximumResponse){};

    // Error handling
    // this RPC will throw an exception if the sent number is negative
    // The error being sent is of type INVALID_ARGUMENT
    rpc SquareRoot(SquareRootRequest) returns (SquareRootResponse){};
}